{"ast":null,"code":"import { useState, useCallback } from 'react';\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      if (body) {\n        body = JSON.stringify(body);\n      }\n\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || 'somthing happends...');\n      }\n\n      setLoading(false);\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw new Error(e.message);\n    }\n  }, []);\n\n  const clearError = () => setError(null);\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["/Users/ruslangoroshko/Documents/dev/restApi_linkShorter/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","JSON","stringify","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,OAApC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AACzB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAGA,QAAMO,OAAO,GAAGN,WAAW,CAAE,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACnFP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AAEA,UAAIM,IAAJ,EAAU;AACNA,QAAAA,IAAI,GAAGE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAP;AACH;;AACD,YAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACP,GAAD,EAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA,IAAT;AAAeC,QAAAA;AAAf,OAAN,CAA5B;AAEA,YAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AACd,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,sBAA1B,CAAN;AACH;;AACDhB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,aAAOY,IAAP;AACH,KAdD,CAcE,OAAOK,CAAP,EAAU;AACRjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACe,CAAC,CAACD,OAAH,CAAR;AACA,YAAM,IAAID,KAAJ,CAAUE,CAAC,CAACD,OAAZ,CAAN;AACH;AACJ,GArB0B,EAqBxB,EArBwB,CAA3B;;AAuBA,QAAME,UAAU,GAAG,MAAMhB,QAAQ,CAAC,IAAD,CAAjC;;AAEA,SAAO;AAACH,IAAAA,OAAD;AAAUI,IAAAA,OAAV;AAAmBF,IAAAA,KAAnB;AAA0BiB,IAAAA;AAA1B,GAAP;AACH,CA/BM","sourcesContent":["import {useState, useCallback} from 'react'\n\nexport const useHttp = () => {\n    const [loading, setLoading] = useState(false)\n    const [error, setError] = useState(null)\n\n\n    const request = useCallback( async (url, method = \"GET\", body = null, headers = {}) => {\n        setLoading(true)\n        try {\n\n            if (body) {\n                body = JSON.stringify(body)\n            }\n            const response = await fetch(url, {method, body, headers})\n\n            const data = await response.json()\n\n            if (!response.ok) {\n                throw new Error(data.message || 'somthing happends...')\n            }\n            setLoading(false)\n            return data\n        } catch (e) {\n            setLoading(false)\n            setError(e.message)\n            throw new Error(e.message)\n        }\n    }, [])\n\n    const clearError = () => setError(null)\n    \n    return {loading, request, error, clearError}\n}"]},"metadata":{},"sourceType":"module"}